"0","knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)"
"0","library(tidyverse)"
"0","library(readxl)"
"0","library(haven)"
"0","library(lubridate)"
"0","library(stringi)"
"0","library(pander)"
"0","library(janitor)"
"0","library(scales)"
"0","library(magrittr)"
"0","library(sf)"
"0","library(bookdown)"
"0","library(patchwork)"
"0","library(kableExtra)"
"0","library(DT)"
"0","library(viridis)"
"0","library(mdepriv)"
"0","library(psych)"
"0","library(widyr)"
"0","library(rpart)"
"0","library(rpart.utils)"
"0","library(rattle)"
"0","library(broomstick)"
"0","library(corrplot)"
"0","library(broom)"
"0","library(tidytext)"
"0","library(plotly)"
"0","library(ggridges)"
"0","library(RColorBrewer)"
"0","library(ggforce)"
"0","library(here)"
"0",""
"0","# if this is just townships, you can just take out haven and maybe tidytext? "
"0",""
"0","theme_set(theme_minimal())"
"0",""
"0","# disabling scientific notation"
"0","options(scipen = 999)"
"0",""
"0","# pander tables all in one row"
"0","panderOptions('table.split.table', Inf)"
"0",""
"0","# pander thousands separator"
"0","panderOptions(""big.mark"", "","")"
"0",""
"0","# replace "
"0","opts <- options(knitr.kable.NA = """")"
"0",""
"0","`%out%` <- Negate(`%in%`)"
"0",""
"0","# function beneficiary summaries"
"0","sum_ben <- function(df, column_var){"
"0","  "
"0","  column_var <- enquo(column_var)"
"0","  "
"0","  df %>%"
"0","    group_by(!!column_var) %>% # must add bang-bang"
"0","    summarise(beneficiaries = sum(beneficiaries)) %>% "
"0","    arrange(desc(beneficiaries))"
"0","    "
"0","}"
"0",""
"0","# function beneficiary summaries, 2 grouped variables"
"0","sum_ben2 <- function(df, column_var1, column_var2){"
"0","  "
"0","  column_var1 <- enquo(column_var1)"
"0","  column_var2 <- enquo(column_var2)"
"0","  "
"0","  df %>%"
"0","    group_by(!!column_var1, !!column_var2) %>% # must add bang-bang"
"0","    summarise(beneficiaries = sum(beneficiaries)) %>% "
"0","    arrange(desc(beneficiaries))"
"0","    "
"0","}"
"0",""
"0","# scaling functions "
"0","range01 <- function(x){(x-min(x))/(max(x)-min(x))}"
"0","range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}"
"0",""
"0","#mode function "
"0","mode <- function(x) {"
"0","  ux <- unique(x)"
"0","  ux[which.max(tabulate(match(x, ux)))]"
"0","}"
"0",""
"0","# here"
"0","here::here()"
"1","[1]"
"1"," ""C:/Users/seany/Downloads/R/mmr_township_prioritisation"""
"1","
"
"0","# show_col(viridis_pal(option = ""cividis"")(5))"
