cluster,
partners, beneficiaries,
battles:conflict_score) %>%
filter(township == "Myaing")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyverse)
library(janitor)
library(readxl)
library(haven)
library(lubridate)
library(mdepriv)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
conflict_score <- read_csv("./data/conflict_score_20220920.csv")
# ACLED dataset
acled <- read_csv("./data/acled_20220920.csv") %>%
mutate(has_village = if_else(location != admin3, "yes", "no"))
vul_share <- vulmmr %>% select(avg_safe_sanitation_improved_drinking_water:female_literacy_percent_literate,
child_dependency_ratio_31, unpaid_family_worker_percent,
admin3_pcode = township_pcode) %>%
left_join(conflict_score %>% select(conflict_score, admin3_pcode), by = "admin3_pcode") %>%
select(-conflict_index_c_percent_of_max_inverse_percent_of_average_of_envelopes_12,
-unpaid_family_workers_inverse, -child_dependency_ratio_inverse) %>%
mutate_at(vars(avg_safe_sanitation_improved_drinking_water:female_literacy_percent_literate), ~ 1 - .x) %>%
mutate(conflict_env = range_wna(conflict_score)) %>%
filter(!is.na(admin3_pcode)) %>%
replace(is.na(.), 0) %>%
mdepriv(c("avg_safe_sanitation_improved_drinking_water", "average_good_roof_and_wall",
"highest_education_at_least_middle_school_percent_14", "electricity_for_lighting_percent_15",
"id_card_with_id_total_percent_16", "female_literacy_percent_literate",
"child_dependency_ratio_31", "unpaid_family_worker_percent", "conflict_env"),
method = "cz", output = "all",
score_i_heading = "vul_score")
vulmmr <- read_csv("./data/vulmmr.csv")
vul_share <- vulmmr %>% select(avg_safe_sanitation_improved_drinking_water:female_literacy_percent_literate,
child_dependency_ratio_31, unpaid_family_worker_percent,
admin3_pcode = township_pcode) %>%
left_join(conflict_score %>% select(conflict_score, admin3_pcode), by = "admin3_pcode") %>%
select(-conflict_index_c_percent_of_max_inverse_percent_of_average_of_envelopes_12,
-unpaid_family_workers_inverse, -child_dependency_ratio_inverse) %>%
mutate_at(vars(avg_safe_sanitation_improved_drinking_water:female_literacy_percent_literate), ~ 1 - .x) %>%
mutate(conflict_env = range_wna(conflict_score)) %>%
filter(!is.na(admin3_pcode)) %>%
replace(is.na(.), 0) %>%
mdepriv(c("avg_safe_sanitation_improved_drinking_water", "average_good_roof_and_wall",
"highest_education_at_least_middle_school_percent_14", "electricity_for_lighting_percent_15",
"id_card_with_id_total_percent_16", "female_literacy_percent_literate",
"child_dependency_ratio_31", "unpaid_family_worker_percent", "conflict_env"),
method = "cz", output = "all",
score_i_heading = "vul_score")
# main township-level dataset
fs_pin <- read_excel("./data/hpc_pin.xlsx") %>%
left_join(fsc %>% group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries)),
by = c("admin3_pcode" = "admin3_pcode_old")) %>%
left_join(conflict_score %>%
select(admin3_pcode, battles, explosions_remote_violence,
protests_and_riots, strategic_developments,
violence_against_civilians, conflict_score, fatalities),
by = "admin3_pcode") %>%
left_join(vulmmr %>% select(admin3_pcode = township_pcode,
admin2_pcode = district_pcode,
total_population_2015 = total_pop_both_sexes,
area_sown_acres = all_area_sowed_mali,
population_density, vulnerability_band,
old_conflict_score = conflict_index_a_average_of_percent_of_totals,
old_conflict_env = conflict_index_b_average_of_envelopes,
approximate_vulnerable_population),
by = "admin3_pcode") %>%
left_join(floods_storm_surge %>%
select(admin3_pcode, flood_prob, flood_count),
by = "admin3_pcode") %>%
mutate(fs_pin = ifelse(fs_pin > population_2021_proj, population_2021_proj, fs_pin)) %>%
replace_na(list(conflict_score = 0, flood_prob = 0)) %>%
mutate(band_text = case_when(
vulnerability_band == 1 ~ "1. Extreme outliers, underdevelopment and conflict",
vulnerability_band == 2 ~ "2. Conflict-affected, poor human development",
vulnerability_band == 3 ~ "3. Hubs in conflict-affected areas",
vulnerability_band == 4 ~ "4. Very low access to services and infrastructure",
vulnerability_band == 5 ~ "5. Agricultural areas with high profits",
vulnerability_band == 6 ~ "6. Secondary cities/towns in agricultural areas",
vulnerability_band == 7 ~ "7. Up-and-coming peri-urban and urban areas",
vulnerability_band == 8 ~ "8. Affluent, urban core")) %>%
left_join(vul_share$data %>%  select(-conflict_score), by = "admin3_pcode") %>%
mutate(mdp_score_old = (avg_safe_sanitation_improved_drinking_water + average_good_roof_and_wall +
highest_education_at_least_middle_school_percent_14 + electricity_for_lighting_percent_15 +
id_card_with_id_total_percent_16 + female_literacy_percent_literate +
child_dependency_ratio_31 + unpaid_family_worker_percent) / 8) %>%
ungroup()
# main township-level dataset
fs_pin <- read_excel("./data/hpc_pin.xlsx") %>%
left_join(conflict_score %>%
select(admin3_pcode, battles, explosions_remote_violence,
protests_and_riots, strategic_developments,
violence_against_civilians, conflict_score, fatalities),
by = "admin3_pcode") %>%
left_join(vulmmr %>% select(admin3_pcode = township_pcode,
admin2_pcode = district_pcode,
total_population_2015 = total_pop_both_sexes,
area_sown_acres = all_area_sowed_mali,
population_density, vulnerability_band,
old_conflict_score = conflict_index_a_average_of_percent_of_totals,
old_conflict_env = conflict_index_b_average_of_envelopes,
approximate_vulnerable_population),
by = "admin3_pcode") %>%
left_join(floods_storm_surge %>%
select(admin3_pcode, flood_prob, flood_count),
by = "admin3_pcode") %>%
mutate(fs_pin = ifelse(fs_pin > population_2021_proj, population_2021_proj, fs_pin)) %>%
replace_na(list(conflict_score = 0, flood_prob = 0)) %>%
mutate(band_text = case_when(
vulnerability_band == 1 ~ "1. Extreme outliers, underdevelopment and conflict",
vulnerability_band == 2 ~ "2. Conflict-affected, poor human development",
vulnerability_band == 3 ~ "3. Hubs in conflict-affected areas",
vulnerability_band == 4 ~ "4. Very low access to services and infrastructure",
vulnerability_band == 5 ~ "5. Agricultural areas with high profits",
vulnerability_band == 6 ~ "6. Secondary cities/towns in agricultural areas",
vulnerability_band == 7 ~ "7. Up-and-coming peri-urban and urban areas",
vulnerability_band == 8 ~ "8. Affluent, urban core")) %>%
left_join(vul_share$data %>%  select(-conflict_score), by = "admin3_pcode") %>%
mutate(mdp_score_old = (avg_safe_sanitation_improved_drinking_water + average_good_roof_and_wall +
highest_education_at_least_middle_school_percent_14 + electricity_for_lighting_percent_15 +
id_card_with_id_total_percent_16 + female_literacy_percent_literate +
child_dependency_ratio_31 + unpaid_family_worker_percent) / 8) %>%
ungroup()
floods_storm_surge <- read_excel("./data/Flood_Affected_Township_(2008-2021) (1).xlsx") %>%
clean_names() %>%
rename(state = st, township = ts, admin1_pcode = st_pcode, admin3_pcode = ts_pcode) %>%
mutate(year_2008_storm_surge = ifelse(!is.na(storm_surg), 1, 0)) %>%
mutate(year_2008 = ifelse(str_detect(flood_year, "2008"), 1, 0),
year_2009 = ifelse(str_detect(flood_year, "2009"), 1, 0),
year_2010 = ifelse(str_detect(flood_year, "2010"), 1, 0),
year_2011 = ifelse(str_detect(flood_year, "2011"), 1, 0),
year_2012 = ifelse(str_detect(flood_year, "2012"), 1, 0),
year_2013 = ifelse(str_detect(flood_year, "2013"), 1, 0),
year_2014 = ifelse(str_detect(flood_year, "2014"), 1, 0),
year_2015 = ifelse(str_detect(flood_year, "2015"), 1, 0),
year_2016 = ifelse(str_detect(flood_year, "2016"), 1, 0),
year_2017 = ifelse(str_detect(flood_year, "2017"), 1, 0),
year_2018 = ifelse(str_detect(flood_year, "2018"), 1, 0),
year_2019 = ifelse(str_detect(flood_year, "2019"), 1, 0),
year_2020 = ifelse(str_detect(flood_year, "2020"), 1, 0),
year_2021 = ifelse(str_detect(flood_year, "2021"), 1, 0)) %>%
rename(floodyears = flood_year) %>%
mutate(
flood_prob = select(., starts_with("year_")) %>% rowMeans(na.rm = TRUE),
flood_count = select(., starts_with("year_")) %>% rowSums(na.rm = TRUE))
floods_storm_surge %>%
write_csv("./data/floods_storm_surge.csv")
# main township-level dataset
fs_pin <- read_excel("./data/hpc_pin.xlsx") %>%
left_join(conflict_score %>%
select(admin3_pcode, battles, explosions_remote_violence,
protests_and_riots, strategic_developments,
violence_against_civilians, conflict_score, fatalities),
by = "admin3_pcode") %>%
left_join(vulmmr %>% select(admin3_pcode = township_pcode,
admin2_pcode = district_pcode,
total_population_2015 = total_pop_both_sexes,
area_sown_acres = all_area_sowed_mali,
population_density, vulnerability_band,
old_conflict_score = conflict_index_a_average_of_percent_of_totals,
old_conflict_env = conflict_index_b_average_of_envelopes,
approximate_vulnerable_population),
by = "admin3_pcode") %>%
left_join(floods_storm_surge %>%
select(admin3_pcode, flood_prob, flood_count),
by = "admin3_pcode") %>%
mutate(fs_pin = ifelse(fs_pin > population_2021_proj, population_2021_proj, fs_pin)) %>%
replace_na(list(conflict_score = 0, flood_prob = 0)) %>%
mutate(band_text = case_when(
vulnerability_band == 1 ~ "1. Extreme outliers, underdevelopment and conflict",
vulnerability_band == 2 ~ "2. Conflict-affected, poor human development",
vulnerability_band == 3 ~ "3. Hubs in conflict-affected areas",
vulnerability_band == 4 ~ "4. Very low access to services and infrastructure",
vulnerability_band == 5 ~ "5. Agricultural areas with high profits",
vulnerability_band == 6 ~ "6. Secondary cities/towns in agricultural areas",
vulnerability_band == 7 ~ "7. Up-and-coming peri-urban and urban areas",
vulnerability_band == 8 ~ "8. Affluent, urban core")) %>%
left_join(vul_share$data %>%  select(-conflict_score), by = "admin3_pcode") %>%
mutate(mdp_score_old = (avg_safe_sanitation_improved_drinking_water + average_good_roof_and_wall +
highest_education_at_least_middle_school_percent_14 + electricity_for_lighting_percent_15 +
id_card_with_id_total_percent_16 + female_literacy_percent_literate +
child_dependency_ratio_31 + unpaid_family_worker_percent) / 8) %>%
ungroup()
# 2019 intercensal district-level values
district_ref <- fs_pin %>%
select(state, admin2_pcode, admin3_pcode, total_population_2015,
avg_safe_sanitation_improved_drinking_water:unpaid_family_worker_percent) %>%
group_by(admin2_pcode) %>%
mutate_at(vars(avg_safe_sanitation_improved_drinking_water:unpaid_family_worker_percent),
~ .x * total_population_2015) %>%
relocate(total_population_2015, .after = unpaid_family_worker_percent) %>%
summarise(across(avg_safe_sanitation_improved_drinking_water:total_population_2015, ~sum(.))) %>%
mutate_at(vars(avg_safe_sanitation_improved_drinking_water:unpaid_family_worker_percent),
~ .x / total_population_2015) %>%
left_join(
read_excel(
"./data/Dataset_Climate, Environmental Degradation and Disaster Risk in Myanmar_May2022.xlsx",
skip = 2,
sheet = "2016-21 Vulnerability"
) %>%
slice(-1) %>%
clean_names() %>%
select(-label) %>%
rename(state = state_region_name, admin1_pcode = state_region_pcode,
district = district_name, admin2_pcode = district_pcode) %>%
select(admin2_pcode, avg_safe_sanitation_improved_drinking_water_21:female_literacy_percent_literate_29) %>%
select(-conflict_index_c_percent_of_max_inverse_percent_of_average_of_envelopes_23) %>%
na.omit() %>%
mutate_at(vars(avg_safe_sanitation_improved_drinking_water_21:female_literacy_percent_literate_29), ~ as.numeric(.x)) %>%
mutate_at(vars(avg_safe_sanitation_improved_drinking_water_21:female_literacy_percent_literate_29), ~ 1 - .x),
by = "admin2_pcode") %>%
select(admin2_pcode,
d_water_2015 = avg_safe_sanitation_improved_drinking_water,
d_house_2015 = average_good_roof_and_wall,
d_electricity_2015 = electricity_for_lighting_percent_15,
d_literacy_2015 = female_literacy_percent_literate,
d_child_2015 = child_dependency_ratio_31,
d_unpaid_2015 = unpaid_family_worker_percent,
d_water_2019 = avg_safe_sanitation_improved_drinking_water_21,
d_house_2019 = average_good_roof_and_wall_22  ,
d_electricity_2019 = electricity_for_lighting_percent_26,
d_literacy_2019 = female_literacy_percent_literate_29,
d_child_2019 = child_dependency_ratio_inverse_28,
d_unpaid_2019 = unpaid_family_workers_inverse_24)
# write it back into fs_pin
fs_pin <- fs_pin %>%
left_join(district_ref, by = "admin2_pcode") %>%
mutate(water_2019 = ifelse(
!is.na(d_water_2019),
avg_safe_sanitation_improved_drinking_water / d_water_2015 * d_water_2019,
avg_safe_sanitation_improved_drinking_water),
house_2019 = ifelse(
!is.na(d_house_2019),
average_good_roof_and_wall / d_house_2015 * d_water_2019,
average_good_roof_and_wall),
edu_2019 = highest_education_at_least_middle_school_percent_14,
electricity_2019 = ifelse(
!is.na(d_electricity_2019),
electricity_for_lighting_percent_15 / d_electricity_2015 * d_electricity_2019,
electricity_for_lighting_percent_15),
id_card_2019 = id_card_with_id_total_percent_16,
female_literacy_2019 = ifelse(
!is.na(d_literacy_2019),
female_literacy_percent_literate / d_literacy_2015 * d_literacy_2019,
female_literacy_percent_literate),
child_dependency_2019 = ifelse(
!is.na(d_child_2019),
child_dependency_ratio_31 / d_child_2015 * d_child_2019,
child_dependency_ratio_31),
unpaid_2019 = ifelse(
!is.na(d_unpaid_2019),
unpaid_family_worker_percent / d_unpaid_2015 * d_unpaid_2019,
unpaid_family_worker_percent)) %>%
mutate(mdp_adjust = (water_2019 + house_2019 + edu_2019 +
electricity_2019 + id_card_2019 +
female_literacy_2019 + child_dependency_2019 + unpaid_2019) / 8) %>%
ungroup()
# k-means clustering and output
set.seed(123)
km_res2 <- fs_pin %>%
replace_na(list(fatalities = 0)) %>%
select(population_density, conflict_score, mdp_adjust, fatalities) %>%
mutate_at(vars(population_density, conflict_score, mdp_adjust, fatalities), ~ range_wna(.x)) %>%
kmeans(5, nstart = 25)
# reading it back into fs_pin
fs_pin <- fs_pin %>%
cbind(cluster = km_res2$cluster) %>%
mutate(cluster = recode(cluster,
`1` = "A1",`4` = "A2",
`2` = "B", `3` = "C", `5` = "D"))
fs_pin %>%
write_csv("./data/fs_pin.csv")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(haven)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(sf)
library(bookdown)
library(patchwork)
library(kableExtra)
library(DT)
library(viridis)
library(mdepriv)
library(psych)
library(widyr)
library(rpart)
library(rpart.utils)
library(rattle)
library(broomstick)
library(corrplot)
library(broom)
library(tidytext)
library(plotly)
library(ggridges)
library(RColorBrewer)
library(ggforce)
library(here)
# if this is just townships, you can just take out haven and maybe tidytext?
theme_set(theme_minimal())
# disabling scientific notation
options(scipen = 999)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# here
here::here()
# show_col(viridis_pal(option = "cividis")(5))
# look at datasets.rmd for more info on cleaning
# pcodes
pcodes <- read_excel(here("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx"),
sheet = "03_Township") %>%
rename(admin1_pcode = SR_Pcode,
state = SR_Name_Eng,
admin3_pcode = Tsp_Pcode,
township = Township_Name_Eng,
admin2_pcode = `District/SAZ_Pcode`,
district = `District/SAZ_Name_Eng`)
# shapefiles
pcode3_shape <- st_read(here("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read(here("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
# reading in 5Ws 2021
fsc_2021 <- read_csv(here("./data/fsc5w_2021.csv"))
# 2022 Q2 5Ws
fsc <- read_csv(here("./data/fsc.csv"))
# reading in vulnerability dataset
vulmmr <- read_csv(here("./data/vulmmr.csv"))
# ACLED dataset
acled <- read_csv(here("./data/acled_new.csv")) %>%
mutate(has_village = if_else(location != admin3, "yes", "no"))
# reading in conflict score
conflict_score <- read_csv(here("./data/conflict_score2.csv"))
# show_col(viridis_pal()(10))
floods_storm_surge <- read_csv(here("./data/floods_storm_surge.csv"))
fs_pin <- read_csv(here("./data/fs_pin.csv"))
conflict_score
fs_pin
fs_pin
conflict_scatter <- conflict_score %>%
mutate(total_events = battles + explosions_remote_violence + protests_and_riots + strategic_developments +
violence_against_civilians) %>%
left_join(fs_pin %>% select(state, township, admin3_pcode, population_density), by = "admin3_pcode") %>%
mutate(conflict_score = round(conflict_score, digits = 3)) %>%
ggplot(aes(y = fatalities, x = total_events, colour = conflict_score,
text = paste0(township, ",", "\n",
state, ",", "\n",
"conflict_score: ", conflict_score, ",", "\n",
"events: ", total_events, ",", "\n",
"fatalities: ", fatalities))) +
geom_point(aes(size = fatalities), alpha = 0.85) +
scale_y_continuous(trans = "log10", breaks = c(0, 1, 10, 30, 100, 300, 1000)) +
scale_x_continuous(trans = "log10", breaks = c(0, 1, 10, 30, 100, 300)) +
scale_colour_viridis(option = "magma", direction = -1) +
geom_hline(aes(yintercept = mean(fatalities)), colour = "red", lty = 2) +
geom_vline(aes(xintercept = mean(total_events)), colour = "red", lty = 2) +
labs(x = "Conflict events",
y = "Fatalities",
title = "Conflict events and fatalities by township",
subtitle = "Means of both axes are marked by the dotted red line",
colour = "conflict\nscore",
size = "fatalities",
caption = "Data source: ACLED; acleddata.com")
ggplotly(conflict_scatter, tooltip = c("text"), width = 820) %>%
# layout(showlegend = FALSE, legend = list(font = list(size = 6))) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Conflict events and fatalities by township",
"<br>",
"<sup>",
"mouse over for details; means marked by red lines; fatalities marked by size","</sup>")))
# ggsave("tsp_scatter_conflict.png", dpi = 300, height = 5, width = 8, units = "in")
fs_pin
ben_target <- fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0)) %>%
arrange(desc(reached_pc)) %>%
select(state, township, fs_pin, fs_targeted, beneficiaries, reached_pc, partners, cluster) %>%
mutate(pc_target = round(beneficiaries / fs_targeted * 100, digits = 2)) %>%
ggplot(aes(x = fs_targeted, y = beneficiaries, colour = cluster,
text = paste0(township, ",", "\n",
state, ",", "\n",
"beneficiaries_2022: ", beneficiaries, "\n",
"target_2022: ", fs_targeted, "\n",
"%_reached: ", pc_target, "\n",
"partners_2022: ", partners, "\n",
"group: ", cluster))) +
geom_abline(intercept = 0, slope = 1, lty = 2, colour = "red") +
geom_point(aes(size = beneficiaries), alpha = 0.8) +
scale_size_continuous(guide = "none") +
scale_x_continuous(trans = "log10", labels = comma) +
scale_y_continuous(trans = "log10", labels = comma) +
scale_colour_viridis_d(option = "cividis") +
# scale_colour_manual(values = c("#575C6DFF", "#00204DFF", "#C4B56CFF", "#FFEA46FF")) +
labs(y = "Beneficiaries", x = "Targeted population", colour = "Group",
title = "Targeted population per township vs beneficiaries reached as of 2022, by prioritisation group",
subtitle = "The red line is 100% of target")
ben_target <- fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(fs_pin,
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0)) %>%
arrange(desc(reached_pc)) %>%
select(state, township, fs_pin, fs_targeted, beneficiaries, reached_pc, partners, cluster) %>%
mutate(pc_target = round(beneficiaries / fs_targeted * 100, digits = 2)) %>%
ggplot(aes(x = fs_targeted, y = beneficiaries, colour = cluster,
text = paste0(township, ",", "\n",
state, ",", "\n",
"beneficiaries_2022: ", beneficiaries, "\n",
"target_2022: ", fs_targeted, "\n",
"%_reached: ", pc_target, "\n",
"partners_2022: ", partners, "\n",
"group: ", cluster))) +
geom_abline(intercept = 0, slope = 1, lty = 2, colour = "red") +
geom_point(aes(size = beneficiaries), alpha = 0.8) +
scale_size_continuous(guide = "none") +
scale_x_continuous(trans = "log10", labels = comma) +
scale_y_continuous(trans = "log10", labels = comma) +
scale_colour_viridis_d(option = "cividis") +
# scale_colour_manual(values = c("#575C6DFF", "#00204DFF", "#C4B56CFF", "#FFEA46FF")) +
labs(y = "Beneficiaries", x = "Targeted population", colour = "Group",
title = "Targeted population per township vs beneficiaries reached as of 2022, by prioritisation group",
subtitle = "The red line is 100% of target")
ggplotly(ben_target, tooltip = c("text"), width = 820) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text =
paste0("Targeted population per township vs beneficiaries reached as of Q2 2022",
"<br>",
"<sup>",
"By prioritisation group; the red line is 100% of target; size is beneficiaries reached","</sup>")))
fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
right_join(fs_pin,
by = c("admin3_pcode_old" = "admin3_pcode")) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(gap = ifelse(fs_targeted - beneficiaries <= 0, 0, fs_targeted - beneficiaries),
reached_pc = 1 - gap / fs_targeted,
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
has_beneficiaries = ifelse(beneficiaries > 0, 1, 0)) %>%
group_by(cluster) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
fs_targeted = sum(fs_targeted, na.rm = TRUE),
gap = sum(gap, na.rm = TRUE),
tsp_reached = sum(has_beneficiaries),
tsp_total = n()) %>%
mutate(pc_gap = round(gap / fs_targeted * 100, digits = 2),
pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
mutate_at(vars(fs_targeted, gap), ~ round(.)) %>%
select(group = cluster, beneficiaries, `%_ben` = pc_ben, target = fs_targeted,
gap, `%_gap` = pc_gap, tsp_reached, tsp_total) %>%
kable(caption = "2022 Q1 beneficiaries and percent reached by prioritisation group",
format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
footnote("Any reach above 100% is counted as 100%; exceeding the target in one township does not affect other townships",
general_title = "")
