knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(haven)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(sf)
library(bookdown)
library(patchwork)
library(kableExtra)
library(DT)
library(viridis)
library(mdepriv)
library(psych)
library(widyr)
library(rpart)
library(rpart.utils)
library(rattle)
library(broomstick)
library(corrplot)
library(broom)
library(tidytext)
library(plotly)
library(ggridges)
library(RColorBrewer)
library(ggforce)
library(here)
# if this is just townships, you can just take out haven and maybe tidytext?
theme_set(theme_minimal())
# disabling scientific notation
options(scipen = 999)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# here
here::here()
# show_col(viridis_pal(option = "cividis")(10))
# look at datasets.rmd for more info on cleaning
# pcodes
pcodes <- read_excel(here("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx"),
sheet = "03_Township") %>%
rename(admin1_pcode = SR_Pcode,
state = SR_Name_Eng,
admin3_pcode = Tsp_Pcode,
township = Township_Name_Eng,
admin2_pcode = `District/SAZ_Pcode`,
district = `District/SAZ_Name_Eng`)
# shapefiles
pcode3_shape <- st_read(here("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read(here("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
# reading in 5Ws 2021
fsc_2021 <- read_csv(here("./data/fsc5w_2021.csv"))
# 2022 Q1 5Ws
fsc <- read_csv(here("./data/fsc_q1_2022.csv"))
# reading in vulnerability dataset
vulmmr <- read_csv(here("./data/vulmmr.csv"))
# ACLED dataset
acled <- read_csv(here("./data/acled_new.csv")) %>%
mutate(has_village = if_else(location != admin3, "yes", "no"))
# reading in conflict score
conflict_score <- read_csv(here("./data/conflict_score2.csv"))
# show_col(viridis_pal()(10))
floods_storm_surge <- read_csv(here("./data/floods_storm_surge.csv"))
fs_pin <- read_csv(here("./data/fs_pin.csv"))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(haven)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(sf)
library(bookdown)
library(patchwork)
library(kableExtra)
library(DT)
library(viridis)
library(mdepriv)
library(psych)
library(widyr)
library(rpart)
library(rpart.utils)
library(rattle)
library(broomstick)
library(corrplot)
library(broom)
library(tidytext)
library(plotly)
library(ggridges)
library(RColorBrewer)
library(ggforce)
library(here)
# if this is just townships, you can just take out haven and maybe tidytext?
theme_set(theme_minimal())
# disabling scientific notation
options(scipen = 999)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# here
here::here()
# show_col(viridis_pal(option = "cividis")(10))
# look at datasets.rmd for more info on cleaning
# pcodes
pcodes <- read_excel(here("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx"),
sheet = "03_Township") %>%
rename(admin1_pcode = SR_Pcode,
state = SR_Name_Eng,
admin3_pcode = Tsp_Pcode,
township = Township_Name_Eng,
admin2_pcode = `District/SAZ_Pcode`,
district = `District/SAZ_Name_Eng`)
# shapefiles
pcode3_shape <- st_read(here("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read(here("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
# reading in 5Ws 2021
fsc_2021 <- read_csv(here("./data/fsc5w_2021.csv"))
# 2022 Q1 5Ws
fsc <- read_csv(here("./data/fsc_q1_2022.csv"))
# reading in vulnerability dataset
vulmmr <- read_csv(here("./data/vulmmr.csv"))
# ACLED dataset
acled <- read_csv(here("./data/acled_new.csv")) %>%
mutate(has_village = if_else(location != admin3, "yes", "no"))
# reading in conflict score
conflict_score <- read_csv(here("./data/conflict_score2.csv"))
# show_col(viridis_pal()(10))
floods_storm_surge <- read_csv(here("./data/floods_storm_surge.csv"))
fs_pin <- read_csv(here("./data/fs_pin.csv"))
fs_pin %>%
mutate(total_events = battles + explosions_remote_violence + protests_and_riots + strategic_developments +
violence_against_civilians) %>%
filter(conflict_score != 0) %>%
ggplot(aes(x = mdp_adjust, y = conflict_score, colour = conflict_score)) +
geom_hline(aes(yintercept = median(conflict_score)), colour = "red", lty = 2) +
geom_vline(aes(xintercept = median(mdp_adjust)), colour = "red", lty = 2) +
geom_smooth(se = FALSE, size = .5) +
geom_point(aes(size = population_2021_proj,
text = paste0(township, ",", "\n",
state, ",", "\n",
"events: ", total_events, ",", "\n",
"fatalities: ", fatalities, ",", "\n",
"conflict_score: ", round(conflict_score, digits = 3), ",", "\n",
"md_vulnerability: ", round(mdp_adjust, digits = 3), ",", "\n",
"partners_2021: ", partners_2021)),
alpha = .7) +
scale_colour_viridis(direction = -1, end = .95) +
#scale_x_continuous(trans = "log10") +
# scale_y_continuous(trans = "log10") +
labs(x = "Multidimensional vulnerability (2019)", y = "Conflict score (2021)", colour = "conflict\nscore",
title = "Multidimensional vulnerability and conflict by township",
subtitle = "Averages marked by red lines; population marked by size")
