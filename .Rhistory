left_join(pcode3_shape,
by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = cluster), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(fs_pin, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township.y),
vjust = -.7,
size = 3) +
scale_fill_manual(values = colours) +
theme_void() +
labs(fill = "Priori-\ntisation\ngroup",
caption = "Data source: ACLED; acleddata.com and FSC calculations",
subtitle = "A1 & A2: conflict affected, B: urban centres, \nC: middling needs, D: development priorities\nFigures show the PIN") +
ggtitle(str_remove_all(
str_c("Townships by prioritisation group, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA)) +
df2 %>%
group_by(admin3_pcode = admin3_pcode_old,
state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
filter(state == !!state_name) %>%
right_join(pcode3_shape %>%
filter(state == !!state_name),
by = "admin3_pcode") %>%
filter(township != "Cocokyun") %>%
mutate(beneficiaries = ifelse(township == "Hlaingtharya (East)", NA_real_, beneficiaries)) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = beneficiaries), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(beneficiaries, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township),
vjust = -.7,
size = 3) +
scale_fill_viridis(direction = -1,
end = .9,
labels = comma,
na.value = "grey90") +
theme_void() +
labs(fill = "Beneficiaries",
caption = "Data source: FSC partners") +
ggtitle(str_remove_all(
str_c("Beneficiaries as of Q2 2022, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA))
}
generate_map(fs_pin, fsc, "Shan (East)")
generate_map <- function(df1, df2, state) {
state_name <- enquo(state)
colours <- c(#"#00204DFF",
#"#414D6BFF",
#"#7C7B78FF",
"#BCAF6FFF",
"#FFEA46FF"
)
names(colours) <- levels(fs_pin$cluster)
df1 %>%
mutate(fs_pin = ifelse(township == "Hlaingtharya (East)", NA_real_, fs_pin)) %>%
filter(state == !!state_name) %>%
filter(township != "Cocokyun") %>%
left_join(pcode3_shape,
by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = cluster), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(fs_pin, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township.y),
vjust = -.7,
size = 3) +
scale_fill_manual(values = colours) +
theme_void() +
labs(fill = "Priori-\ntisation\ngroup",
caption = "Data source: ACLED; acleddata.com and FSC calculations",
subtitle = "A1 & A2: conflict affected, B: urban centres, \nC: middling needs, D: development priorities\nFigures show the PIN") +
ggtitle(str_remove_all(
str_c("Townships by prioritisation group, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA)) +
df2 %>%
group_by(admin3_pcode = admin3_pcode_old,
state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
filter(state == !!state_name) %>%
right_join(pcode3_shape %>%
filter(state == !!state_name),
by = "admin3_pcode") %>%
filter(township != "Cocokyun") %>%
mutate(beneficiaries = ifelse(township == "Hlaingtharya (East)", NA_real_, beneficiaries)) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = beneficiaries), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(beneficiaries, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township),
vjust = -.7,
size = 3) +
scale_fill_viridis(direction = -1,
end = .9,
labels = comma,
na.value = "grey90") +
theme_void() +
labs(fill = "Beneficiaries",
caption = "Data source: FSC partners") +
ggtitle(str_remove_all(
str_c("Beneficiaries as of Q2 2022, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA))
}
generate_map(fs_pin, fsc, "Shan (East)")
ggsave("./plots/shan_east_pin_groups.png",
dpi = 300,
units = "in",
width = 18,
height = 18,
device = "png")
generate_map <- function(df1, df2, state) {
state_name <- enquo(state)
colours <- c("#00204DFF",
"#414D6BFF",
"#7C7B78FF",
"#BCAF6FFF",
"#FFEA46FF"
)
names(colours) <- levels(fs_pin$cluster)
df1 %>%
mutate(fs_pin = ifelse(township == "Hlaingtharya (East)", NA_real_, fs_pin)) %>%
filter(state == !!state_name) %>%
filter(township != "Cocokyun") %>%
left_join(pcode3_shape,
by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = cluster), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(fs_pin, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township.y),
vjust = -.7,
size = 3) +
scale_fill_manual(values = colours) +
theme_void() +
labs(fill = "Priori-\ntisation\ngroup",
caption = "Data source: ACLED; acleddata.com and FSC calculations",
subtitle = "A1 & A2: conflict affected, B: urban centres, \nC: middling needs, D: development priorities\nFigures show the PIN") +
ggtitle(str_remove_all(
str_c("Townships by prioritisation group, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA)) +
df2 %>%
group_by(admin3_pcode = admin3_pcode_old,
state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
filter(state == !!state_name) %>%
right_join(pcode3_shape %>%
filter(state == !!state_name),
by = "admin3_pcode") %>%
filter(township != "Cocokyun") %>%
mutate(beneficiaries = ifelse(township == "Hlaingtharya (East)", NA_real_, beneficiaries)) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = beneficiaries), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(beneficiaries, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township),
vjust = -.7,
size = 3) +
scale_fill_viridis(direction = -1,
end = .9,
labels = comma,
na.value = "grey90") +
theme_void() +
labs(fill = "Beneficiaries",
caption = "Data source: FSC partners") +
ggtitle(str_remove_all(
str_c("Beneficiaries as of Q2 2022, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA))
}
generate_map(fs_pin, fsc, "Shan (North)")
generate_map <- function(df1, df2, state) {
state_name <- enquo(state)
colours <- c("#00204DFF",
"#414D6BFF",
#"#7C7B78FF",
"#BCAF6FFF",
"#FFEA46FF"
)
names(colours) <- levels(fs_pin$cluster)
df1 %>%
mutate(fs_pin = ifelse(township == "Hlaingtharya (East)", NA_real_, fs_pin)) %>%
filter(state == !!state_name) %>%
filter(township != "Cocokyun") %>%
left_join(pcode3_shape,
by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = cluster), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(fs_pin, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township.y),
vjust = -.7,
size = 3) +
scale_fill_manual(values = colours) +
theme_void() +
labs(fill = "Priori-\ntisation\ngroup",
caption = "Data source: ACLED; acleddata.com and FSC calculations",
subtitle = "A1 & A2: conflict affected, B: urban centres, \nC: middling needs, D: development priorities\nFigures show the PIN") +
ggtitle(str_remove_all(
str_c("Townships by prioritisation group, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA)) +
df2 %>%
group_by(admin3_pcode = admin3_pcode_old,
state) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
filter(state == !!state_name) %>%
right_join(pcode3_shape %>%
filter(state == !!state_name),
by = "admin3_pcode") %>%
filter(township != "Cocokyun") %>%
mutate(beneficiaries = ifelse(township == "Hlaingtharya (East)", NA_real_, beneficiaries)) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = beneficiaries), size = 0.1, colour = "gray20") +
geom_sf_text(aes(label = round(beneficiaries, digits = 0) %>%
format(big.mark = ",")),
size = 3) +
geom_sf_text(aes(label = township),
vjust = -.7,
size = 3) +
scale_fill_viridis(direction = -1,
end = .9,
labels = comma,
na.value = "grey90") +
theme_void() +
labs(fill = "Beneficiaries",
caption = "Data source: FSC partners") +
ggtitle(str_remove_all(
str_c("Beneficiaries as of Q2 2022, ", as_label(state_name)),
'"')) +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA))
}
generate_map(fs_pin, fsc, "Shan (North)")
ggsave("./plots/shan_north_pin_groups.png",
dpi = 300,
units = "in",
width = 18,
height = 18,
device = "png")
generate_map(fs_pin, fsc, "Shan (South)")
ggsave("./plots/shan_south_pin_groups.png",
dpi = 300,
units = "in",
width = 18,
height = 18,
device = "png")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(haven)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(sf)
library(bookdown)
library(patchwork)
library(kableExtra)
library(DT)
library(viridis)
library(mdepriv)
library(psych)
library(widyr)
library(rpart)
library(rpart.utils)
library(rattle)
library(broomstick)
library(corrplot)
library(broom)
library(tidytext)
library(plotly)
library(ggridges)
library(RColorBrewer)
library(ggforce)
library(here)
# if this is just townships, you can just take out haven and maybe tidytext?
theme_set(theme_minimal())
# disabling scientific notation
options(scipen = 999)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# here
here::here()
# show_col(viridis_pal(option = "cividis")(5))
# look at datasets.rmd for more info on cleaning
# pcodes
pcodes <- read_excel(here("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx"),
sheet = "03_Township") %>%
rename(admin1_pcode = SR_Pcode,
state = SR_Name_Eng,
admin3_pcode = Tsp_Pcode,
township = Township_Name_Eng,
admin2_pcode = `District/SAZ_Pcode`,
district = `District/SAZ_Name_Eng`)
# shapefiles
pcode3_shape <- st_read(here("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read(here("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
# reading in 5Ws 2021
fsc_2021 <- read_csv(here("./data/fsc5w_2021.csv"))
# 2022 Q2 5Ws
fsc <- read_csv(here("./data/fsc.csv"))
# reading in vulnerability dataset
vulmmr <- read_csv(here("./data/vulmmr.csv"))
# ACLED dataset
acled <- read_csv(here("./data/acled_new.csv")) %>%
mutate(has_village = if_else(location != admin3, "yes", "no"))
# reading in conflict score
conflict_score <- read_csv(here("./data/conflict_score2.csv"))
# show_col(viridis_pal()(10))
floods_storm_surge <- read_csv(here("./data/floods_storm_surge.csv"))
fs_pin <- read_csv(here("./data/fs_pin.csv"))
conflict_score %>%
left_join(fs_pin %>%
select(admin3_pcode, cluster),
by = "admin3_pcode")
conflict_score %>%
right_join(fs_pin %>%
select(admin3_pcode, cluster),
by = "admin3_pcode")
conflict_score %>%
right_join(fs_pin %>%
select(admin3_pcode, cluster),
by = "admin3_pcode") %>%
write_csv("./data/conflict_score2.csv")
conflict_score %>%
right_join(fs_pin %>%
select(admin3_pcode, cluster),
by = "admin3_pcode") %>%
write_csv("./data/conflict_score2.csv")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(haven)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(scales)
library(magrittr)
library(sf)
library(bookdown)
library(patchwork)
library(kableExtra)
library(DT)
library(viridis)
library(mdepriv)
library(psych)
library(widyr)
library(rpart)
library(rpart.utils)
library(rattle)
library(broomstick)
library(corrplot)
library(broom)
library(tidytext)
library(plotly)
library(ggridges)
library(RColorBrewer)
library(ggforce)
library(here)
# if this is just townships, you can just take out haven and maybe tidytext?
theme_set(theme_minimal())
# disabling scientific notation
options(scipen = 999)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(desc(beneficiaries))
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# here
here::here()
# show_col(viridis_pal(option = "cividis")(5))
# look at datasets.rmd for more info on cleaning
# pcodes
pcodes <- read_excel(here("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx"),
sheet = "03_Township") %>%
rename(admin1_pcode = SR_Pcode,
state = SR_Name_Eng,
admin3_pcode = Tsp_Pcode,
township = Township_Name_Eng,
admin2_pcode = `District/SAZ_Pcode`,
district = `District/SAZ_Name_Eng`)
# shapefiles
pcode3_shape <- st_read(here("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read(here("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp"),
quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
# reading in 5Ws 2021
fsc_2021 <- read_csv(here("./data/fsc5w_2021.csv"))
# 2022 Q2 5Ws
fsc <- read_csv(here("./data/fsc.csv"))
# reading in vulnerability dataset
vulmmr <- read_csv(here("./data/vulmmr.csv"))
# ACLED dataset
acled <- read_csv(here("./data/acled_new.csv")) %>%
mutate(has_village = if_else(location != admin3, "yes", "no"))
# reading in conflict score
conflict_score <- read_csv(here("./data/conflict_score2.csv"))
# show_col(viridis_pal()(10))
floods_storm_surge <- read_csv(here("./data/floods_storm_surge.csv"))
fs_pin <- read_csv(here("./data/fs_pin.csv"))
fs_pin %>% glimpse()
fs_pin %>%
mutate(multidimensional_vulnerability = mdp_adjust) %>%
write_csv("./data/general_township.csv")
